C51 COMPILER V9.60.7.0   NTC                                                               06/27/2025 11:30:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE NTC
OBJECT MODULE PLACED IN ..\Output\ntc.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE ..\BSP\Src\ntc.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\Inc;..
                    -\Core\Inc;..\Driver;..\Emembed\Inc;..\SYSTEM\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\ntc.lst) OBJECT(..\Output\ntc.obj)

line level    source

   1          #include "ntc.h"
   2          #include "MATH.H"
   3          
   4          TEMP temp;
   5          
   6          void bubble_sort(uint16_t arr[], uint16_t n) 
   7          {
   8   1          uint8_t i, j;
   9   1          uint16_t temp;
  10   1          
  11   1          for (i = 0; i < n-1; i++) {
  12   2              for (j = 0; j < n-i-1; j++) {
  13   3                  if (arr[j] > arr[j+1]) {
  14   4                      // 交换元素
  15   4                      temp = arr[j];
  16   4                      arr[j] = arr[j+1];
  17   4                      arr[j+1] = temp;
  18   4                  }
  19   3              }
  20   2          }
  21   1      }
  22          
  23          /**
  24           * @brief 取10次adc_val均值对应的temp
  25           *
  26           * @param[in] channle_x ntc通道1~4
  27           * 
  28           * @return  temp :最终温度
  29           * 
  30          **/
  31          uint16_t get_temp( uint8_t channle_x )
  32          {
  33   1          uint8_t i,t;
  34   1          uint16_t adc_val = 0;
  35   1              uint16_t temp_val;
  36   1          uint16_t adc_tab[24];
  37   1          /* 1, 取10次adc_val                           */
  38   1          for( t = 0; t < 24; t++ )
  39   1              {
  40   2                      adc_tab[t] = Get_ADC_12bit(channle_x);
  41   2              }              
  42   1          bubble_sort(adc_tab,24);
  43   1          for(i = 6; i < 18; i++)
  44   1          {
  45   2            adc_val += adc_tab[i];
  46   2          }
  47   1          adc_val = adc_val/12;
  48   1      
  49   1          if( adc_val >= 1156 )
  50   1          {
  51   2            temp_val = ((adc_val - 1156) * 100 )/ 623;
  52   2          }else
  53   1          {
  54   2            temp_val = 0;
C51 COMPILER V9.60.7.0   NTC                                                               06/27/2025 11:30:20 PAGE 2   

  55   2          }
  56   1      
  57   1          return temp_val;
  58   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    458    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7      63
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
